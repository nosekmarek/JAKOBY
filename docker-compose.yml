version: '3.8'





services:
  postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - 5432:5432
    volumes:
      - ./postgres-db:/var/lib/postgresql/data/

  backend:
    container_name: backend
    restart: unless-stopped
    image: backend:1.0.0
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: postgres
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    build: 
      context: backend
      target: production
      dockerfile: Dockerfile
    ports:
      - 1337:1337
    depends_on: 
      - postgres
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./package-lock.json:/opt/package-lock.json
      - ./.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads

  frontend:
    container_name: frontend
    restart: unless-stopped
    image: frontend:1.0.0
    env_file: .env

    build: 
      context: frontend
      target: production
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on: 
      - backend